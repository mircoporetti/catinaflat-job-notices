stages:
  - build
  - deploy

variables:
  DOCKER_IMAGE_NAME: ${CI_REGISTRY}/gitlab-mirco/catinaflat-job-notices
  DOCKER_IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
  KUBERNETES_NAMESPACE: catinaflat-job-notices

build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use --name catinaflatbuilder || docker buildx use catinaflatbuilder
    - docker buildx inspect --bootstrap
  script:
    - echo "Building the Docker image"
    - docker buildx build --platform linux/amd64 -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} --push .
    - docker buildx build --platform linux/amd64 -t ${DOCKER_IMAGE_NAME}:latest --push .
  tags:
    - raspberrypi
  only:
    - branches

deploy:
  stage: deploy
  image: docker:20.10.16
  services:
    - docker:dind
  before_script:
    - echo "$KUBECONFIG" > /tmp/kubeconfig
    - export KUBECONFIG=/tmp/kubeconfig
  script:
    - kubectl get namespace ${KUBERNETES_NAMESPACE} || kubectl create namespace ${KUBERNETES_NAMESPACE}
    - |
      kubectl create secret generic catinaflat-credentials \
        --from-literal=CATINAFLAT_EMAIL=${CATINAFLAT_EMAIL} \
        --from-literal=CATINAFLAT_PASSWORD=${CATINAFLAT_PASSWORD} \
        --from-literal=CATINAFLAT_USER_ID=${CATINAFLAT_USER_ID} \
        --from-literal=EMAIL_SENDER_USER=${EMAIL_SENDER_USER} \
        --from-literal=EMAIL_SENDER_PASSWORD=${EMAIL_SENDER_PASSWORD} \
        --namespace=${KUBERNETES_NAMESPACE} \
        --dry-run=client -o yaml | kubectl apply -f -
    - cp k8s/deployment.yml /tmp/deployment.yml
    - sed -i "s|\${KUBERNETES_NAMESPACE}|${KUBERNETES_NAMESPACE}|g" /tmp/deployment.yml
    - sed -i "s|\${DOCKER_IMAGE_NAME}|${DOCKER_IMAGE_NAME}|g" /tmp/deployment.yml
    - sed -i "s|\${DOCKER_IMAGE_TAG}|${DOCKER_IMAGE_TAG}|g" /tmp/deployment.yml
    - kubectl apply -f /tmp/deployment.yml
  tags:
    - raspberrypi
  only:
    - main
